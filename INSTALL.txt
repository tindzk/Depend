Jivai-Utils requires Jivai to  function.  In this tutorial the Jivai
repository is placed in the same subdirectory as Jivai-Utils:

+ Jivai
	+ examples
	+ src
+ Jivai-Utils

Then run:
$ git clone git://github.com/tindzk/Jivai-Utils.git
$ cd Jivai-Utils
$ make JIVAI_PATH=../Jivai/src

Let's try  to build the  httpd application from  the Jivai examples/
directory:

$ cd ../Jivai/examples
$ mkdir -p build/Jivai
$ ../../Jivai-Utils/jutils.bin \
	build \
	output=build/httpd.bin \
	main=httpd.c \
	include=../src \
	map=.:build \
	map=../src:build/Jivai \
	inclhdr=config.h \
	link=@bfd \
	dbgsym=yes \
	optimlevel=0

In contrast  to the  shipped Makefile,  this  will only  compile the
files which are  actually needed.  If a file  changes,  it will only
recompile those files which depend  on the changed one rendering the
build process much faster.

This  feature compares  the source  file's  date  with  the compiled
output. Therefore, it's possible to ``fake'' a file change by doing:

$ touch ../src/HTTP/Server.c

And then execute the above jutils.bin command.  As you can see, only
a subset of the initially built files get recompiled.

Sometimes it's useful  to get an overview of  your project's overall
complexity. Jivai-Utils supports printing the whole dependency tree.
Just  replace  replace  the  "build"  with  "deptree"  in  the above
command.
